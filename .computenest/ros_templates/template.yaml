ROSTemplateFormatVersion: '2015-09-01'
# 定义参数
Parameters:
  # 可用区
  ZoneId:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance:ZoneId
    Label:
      en: VSwitch Available Zone
      zh-cn: 可用区
  # 数据库root账户密码
  Password:
    # 查询该参数时只输出星号（*）
    NoEcho: true
    Type: String
    Description:
      en: 'Database root and admin account password, 8-32 characters, including uppercase and lowercase letters, numbers and special symbols (including: !@#$%^&*-+=_).'
      zh-cn: 数据库root和admin账户密码，长度8-32个字符，可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    Label:
      en: root and admin Account Password
      zh-cn: 数据库root和admin账户密码
    ConstraintDescription:
      en: '8-32 characters, including uppercase and lowercase letters, numbers and special symbols (including: !@#$%^&*-+=_).'
      zh-cn: 8-32个字符，可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    MinLength: '8'
    MaxLength: '32'
    AssociationProperty: ALIYUN::ECS::Instance::Password
  # 新建Ipv4网段
  VpcCidrBlock:
    Type: String
    Label:
      en: VPC CIDR IPv4 Block
      zh-cn: 专有网络IPv4网段
    Description:
      zh-cn: VPC的ip地址段范围，<br>您可以使用以下的ip地址段或其子网:<br><font color='green'>[10.0.0.0/8]</font><br><font
        color='green'>[172.16.0.0/12]</font><br><font color='green'>[192.168.0.0/16]</font>
      en: 'The ip address range of the VPC in the CidrBlock form; <br>You can use
          the following ip address ranges and their subnets: <br><font color=''green''>[10.0.0.0/8]</font><br><font
          color=''green''>[172.16.0.0/12]</font><br><font color=''green''>[192.168.0.0/16]</font>'
    AssociationProperty: ALIYUN::VPC::VPC::CidrBlock
    Default: 192.168.0.0/16
  # 新建交换机网段
  VSwitchCidrBlock:
    Type: String
    Label:
      en: VSwitch CIDR Block
      zh-cn: 交换机子网网段
    Description:
      zh-cn: 必须属于VPC的子网段。
      en: Must belong to the subnet segment of VPC.
    AssociationProperty: ALIYUN::VPC::VSwitch::CidrBlock
    AssociationPropertyMetadata:
      VpcCidrBlock: VpcCidrBlock
    Default: 192.168.1.0/24
  # Ecs实例类型
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: Ecs实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      Constraints:
        InstanceTypeFamily:
          - ecs.u1
# 定义资源
Resources:
  # 安全组
  EcsSecurityGroup:
    Type: 'ALIYUN::ECS::SecurityGroup'
    Properties:
      VpcId:
        Ref: EcsVpc
      # 放行入端口
      SecurityGroupIngress:
        - Priority: 1
          PortRange: 3306/3306
          NicType: internet
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
  # Vpc
  EcsVpc:
    Type: ALIYUN::ECS::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidrBlock
      VpcName:
        Ref: ALIYUN::StackName
  # 交换机
  EcsVSwitch:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Ref: EcsVpc
      CidrBlock:
        Ref: VSwitchCidrBlock
  # Ecs实例
  EcsInstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      # I/O优化实例
      IoOptimized: optimized
      ZoneId:
        Ref: ZoneId
      DiskMappings:
        - Category: cloud_essd
          Device: /dev/xvdb
          Size: 200
      SystemDiskSize: 40
      # 付费方式：按量付费
      InstanceChargeType: PostPaid
      MaxAmount: 1
      # 系统盘类型：cloud_essd
      SystemDiskCategory: cloud_essd
      # 实例名称
      InstanceName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: EcsVpc
      SecurityGroupId:
        Ref: EcsSecurityGroup
      VSwitchId:
        Ref: EcsVSwitch
      # 指定CentOS 7.9镜像，如果修改镜像，UserData脚本需要进行适配
      ImageId: "centos_7_9_x64_20G_alibase_20220727.vhd"
      InstanceType:
        Ref: EcsInstanceType
      # 主机名
      HostName:
        Ref: ALIYUN::StackName
      # Ecs登录密码
      Password:
        Ref: Password
      # 是否为实例分配公网IP
      AllocatePublicIP: true
      InternetMaxBandwidthOut: 1
      # 数据盘初始化和挂载
      UserData: |
        #cloud-config
        bootcmd:
          - |
            #!/bin/bash
            function init_and_mount_data_disk() {
                disk_device="/dev/vdb"
                parted_disk_device="/dev/vdb1"
                mount_point="/data"
                # 已初始化的磁盘，跳过初始化，直接挂载
                if blkid -o value -s TYPE $disk_device &>/dev/null; then
                  echo "Disk is already initialized."
                else
                  echo "Disk is not initialized, initializing..."
                  cat >> /root/InitDataDisk.sh << "EOF"
            #!/bin/bash
            echo "p
            n
            p
        
        
        
            w
            " |  fdisk -u /dev/vdb
            EOF
                  /bin/bash /root/InitDataDisk.sh
                  rm -f /root/InitDataDisk.sh
                  mkfs -t ext4 $parted_disk_device
                fi
        
                cp /etc/fstab /etc/fstab.bak
                mkdir $mount_point
                echo `blkid $parted_disk_device | awk '{print $2}' | sed 's/\\\"//g'` $mount_point ext4 defaults 0 0 >> /etc/fstab
                mount -a
            }
            init_and_mount_data_disk
  InstanceRunCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::GetAtt:
          - EcsInstanceGroup
          - InstanceIds
      CommandContent:
        Fn::Sub:
          - |
            #!/bin/sh

            function install_mysql() {
              # 安装社区版MySQL
              wget '{{ computenest::file::MySQL }}' -O mysql-community-release-el6-5.noarch.rpm
              rpm -ivh mysql-community-release-el6-5.noarch.rpm
              yum repolist all | grep mysql
              yum install mysql-community-server -y
            }

            function change_mysql_config() {
              # 将MySQL的配置和数据路径移动到数据盘上
              rsync -av /var/lib/mysql /data
              # 修改配置文件
              sed -i 's/\/var\/lib/\/data/g' /etc/my.cnf
              echo -e '\n' >> /etc/my.cnf
              echo '[client]' >> /etc/my.cnf
              echo 'port=3306' >> /etc/my.cnf
              echo 'socket=/data/mysql/mysql.sock' >> /etc/my.cnf
            }

            function create_admin_account() {
              # 以超级用户身份登入，创建admin用户，并允许admin用户以Password为密码远程登录
              mysqladmin -u root password '${Password}'
              echo "create database test character set utf8 collate utf8_bin;" > ./test.sql
              echo "CREATE USER 'admin'@'%' IDENTIFIED BY '${Password}';" >> ./test.sql
              echo "GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;" >> ./test.sql
              echo "FLUSH PRIVILEGES;" >> ./test.sql
              mysql -u root -p'${Password}' < ./test.sql
            }

            cd /data
            install_mysql
            systemctl stop mysqld
            change_mysql_config
            systemctl start mysqld
            create_admin_account

          # 数据库root账户密码
          - Password:
              Ref: Password
      Type: RunShellScript
      Timeout: 300
      Sync: true
# 定义输出
Outputs:
  MysqlUserName:
    Label: MySQL登录用户名
    Value: admin
  VisitUrl:
    Label: 私网访问地址
    Description:
      zh-cn: 私网访问地址
      en: private Addresses
    Value:
      Fn::Sub:
        - mysql://${ServerAddress}:3306
        - ServerAddress:
            Fn::Select:
              - 0
              - Fn::GetAtt:
                  - EcsInstanceGroup
                  - PrivateIps
# 定义元数据
Metadata:
  ALIYUN::ROS::Interface:
    # 定义资源分组，创建服务实例时，同一分组的参数分布在一起
    ParameterGroups:
      - Parameters:
          - EcsInstanceType
        Label:
          en: Instance Type
          zh-cn: 实例规格
      - Parameters:
          - Password
        Label:
          en: Basic Configuration
          zh-cn: 基础配置
      - Parameters:
          - ZoneId
          - VpcCidrBlock
          - VSwitchCidrBlock
        Label:
          en: Network Configuration
          zh-cn: 网络配置
